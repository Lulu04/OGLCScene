Version 1.2 - 2025
> added two procedure to TOGLCPath: FlipHorizontaly and FlipVerticaly.
> new property for surface: CollisionBody. It allow to describe the collision area for a surface by associating one or several primitive shape: point, line, circle, rectangle, polygon. This primitive shapes are then used to check a collision between another surface. 
> fixed and improved function ExplodeTexture(). It allow to make an explosion effect with a texture. The principe is: the texture is divided in rectangular sub-textures associated to a TPolarSprite.
> TQuad4Color replace TMultiColorRectangle (the last is now deprecated). TQuad4Color can be a rectangle or any convex quadrilateral with a different color for each vertex. 
> code in function TOGLCCamera.WorldToControl() and ControlToWorld() now use matrix to transform the point.
> added camera AutoFollow feature: camera can now moves smoothly to a fixed point or follow a surface.
> added TSmoothPointF and TSmoothSingle: allow to change value smoothly for variable TPointF or single.
> fixed wrong formula in function LinearSpeedToAngleRotation().
> fix missing condition check to SetChildOf() function.
> added new surface type: TGradientRectangle, allow multi color gradient vertically or horizontally.
> TOGLCGlow have now 4 colors. The Tint property is now separated.
> added new surface type: TOGLCSpotLight, like TOGLCGlow but in one direction.
> added convenient function for create a child TSprite in any surface.

Version 1.1 - Mars 8 2025
> In the Planet Designer, the parameter's panel is replaced by a Scrollbox to allow small screen to display all the parameters.

Version 1.0 - Mars 7 2025
> added tool Planet Designer.
> added tool cloud designer.
> LoadBitmapFromSVG can now load a svg image with different aspect ratio than the original file.
> now shader have a name. This name is used to produce log error message when a shader cause a compilation error.
> fixed wrong size on TFreeTextAligned.
> added rendering to texture capability.
> added post-processing capability with some built-in effects. Custom post-processing effects are also possible.
> added procedural shader capability
> refactor code for TOGLCShader: before it was a class now it is a record.
> added Rendering to texture and Post-Processing on layers.
> optimization in fragment shaders using mix() function.
